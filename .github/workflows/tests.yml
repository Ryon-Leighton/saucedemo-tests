name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image (cached)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: e2e/Dockerfile
          tags: pw-tests:ci
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ---------- API TESTS ----------
      - name: Prepare API report dirs
        run: mkdir -p playwright-report-api test-results-api

      - name: Run API tests (Docker)
        id: run_api
        continue-on-error: true
        env:
          BASE_URL: https://www.saucedemo.com/
        run: |
          docker run --rm \
            -e BASE_URL="${BASE_URL}" \
            -e CI=true \
            -v "${{ github.workspace }}/playwright-report-api:/app/playwright-report" \
            -v "${{ github.workspace }}/test-results-api:/app/test-results" \
            pw-tests:ci \
            npx playwright test -c playwright.api.config.ts

      - name: Upload API HTML report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-api
          path: playwright-report-api/
          retention-days: 30

      - name: Upload API JUnit results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-api
          path: test-results-api/
          retention-days: 30

      - name: Stop pipeline if API failed
        if: ${{ steps.run_api.outcome == 'failure' }}
        run: exit 1

      # ---------- E2E (BDD) TESTS ----------
      - name: Prepare E2E report dirs
        run: mkdir -p playwright-report-e2e test-results-e2e

      - name: Run E2E (BDD) tests (Docker)
        id: run_e2e
        continue-on-error: true
        env:
          BASE_URL: https://www.saucedemo.com/
        run: |
          docker run --rm \
            -e BASE_URL="${BASE_URL}" \
            -e CI=true \
            -v "${{ github.workspace }}/playwright-report-e2e:/app/playwright-report" \
            -v "${{ github.workspace }}/test-results-e2e:/app/test-results" \
            pw-tests:ci \
            sh -lc "npx bddgen && npx playwright test -c playwright.config.ts"

      - name: Upload E2E HTML report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-e2e
          path: playwright-report-e2e/
          retention-days: 30

      - name: Upload E2E JUnit results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-e2e
          path: test-results-e2e/
          retention-days: 30

      - name: Fail job if E2E failed
        if: ${{ steps.run_e2e.outcome == 'failure' }}
        run: exit 1

      # ---------- k6 (JS) ----------
      - name: Prepare k6 output dir & make runner executable
        run: |
          mkdir -p k6/out
          chmod +x k6/run.sh

      - name: Run k6 smoke + small-load (Docker)
        id: run_k6
        continue-on-error: true
        env:
          BASE_URL: https://www.saucedemo.com/
        run: |
          set +e
          docker run --rm \
            --entrypoint /bin/sh \
            -e BASE_URL="${BASE_URL}" \
            -e K6_TEST=all \
            -v "${{ github.workspace }}/k6:/scripts" \
            grafana/k6:latest /scripts/run.sh
          code=$?
          echo "code=$code" >> $GITHUB_OUTPUT
          exit 0

      - name: Upload k6 results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: k6-results
          path: k6/out/
          retention-days: 30
          if-no-files-found: warn

      - name: Fail job if k6 failed
        if: ${{ steps.run_k6.outputs.code != '0' }}
        run: exit 1
